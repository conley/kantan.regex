package kantan.regex

trait GeneratedMatchDecoders {
  [#def decoder[[#A1#], O]([#i1: Int#])(f: ([#A1#]) ⇒ O)(implicit [#da1: GroupDecoder[A1]#]): MatchDecoder[O] = MatchDecoder.from { m ⇒
    for {
      [#a1 ← m.decode[A1](i1)#
      ]
    } yield f([#a1#])
  }

  def ordered[[#A1#], O](f: ([#A1#]) ⇒ O)(implicit [#da1: GroupDecoder[A1]#]): MatchDecoder[O] = decoder([#1#])(f)#

  ]

  [#def tuple[[#A1#]]([#i1: Int#])(implicit [#da1: GroupDecoder[A1]#]): MatchDecoder[Tuple1[[#A1#]]] =
    decoder([#i1#])(Tuple1.apply[[#A1#]])#

  ]
}